<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[web前端建站与学习常用网站]]></title>
      <url>http://ningbo00.top/2017/02/09/H5lock/</url>
      <content type="html"><![CDATA[<h1 id="H5解锁样式绘图（九宫格样式扩展，支持Canvas和图片）"><a href="#H5解锁样式绘图（九宫格样式扩展，支持Canvas和图片）" class="headerlink" title="H5解锁样式绘图（九宫格样式扩展，支持Canvas和图片）"></a>H5解锁样式绘图（九宫格样式扩展，支持Canvas和图片）</h1><p>H5九宫格解锁 样式绘图（支持Canvas和图片）</p>
<pre><code>http://test.go.163.com/go/2016/1227/H5lock/src/H5lock.js
</code></pre><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><img src="qr-code/qr-code.png" alt="qr-code"></p>
<p><a href="http://test.go.163.com/go/2016/1227/H5lock/" target="_blank" rel="external">http://test.go.163.com/go/2016/1227/H5lock/</a></p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><pre><code>&lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;
</code></pre><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;src/H5lock.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var lock = new H5lock({});
    lock.init(n,m,H5lockImgSrc);//n:列数 m:行数 H5lockImgSrc:图片路径
&lt;/script&gt;
</code></pre><h3 id="Option-method"><a href="#Option-method" class="headerlink" title="Option method"></a>Option method</h3><pre><code>lock.reset(); //页面重置
</code></pre><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><pre><code>&lt;div id=&quot;canvas-box&quot;&gt;
    &lt;a id=&quot;updatePassword&quot;&gt;重置&lt;/a&gt;
    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;
&lt;/div&gt;  
</code></pre><hr>
<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;src/H5lock.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    // 初始化
    var lock = new H5lock({});
    //4列,6行,图片路径
    lock.init(4,6,&quot;src/star3.png&quot;);
    // 重置按钮
    document.getElementById(&apos;updatePassword&apos;).addEventListener(&apos;click&apos;, function(){
        lock.reset();
    });
&lt;/script&gt;
</code></pre><h2 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h2><p>H5Lock.js自定义</p>
<h3 id="初始页面效果"><a href="#初始页面效果" class="headerlink" title="初始页面效果"></a>初始页面效果</h3><pre><code>H5lock.prototype.drawCle = function(x, y) { // 初始化解锁面板
    // 线条颜色
    this.ctx.strokeStyle = &apos;#CFE6FF&apos;;
    // 线条宽度
    this.ctx.lineWidth = 2;
    this.ctx.beginPath();
    this.ctx.arc(x, y, this.r, 0, Math.PI * 2, true);
    this.ctx.closePath();
    this.ctx.stroke();
}
</code></pre><h3 id="触碰后样式"><a href="#触碰后样式" class="headerlink" title="触碰后样式"></a>触碰后样式</h3><h4 id="图片实现"><a href="#图片实现" class="headerlink" title="图片实现"></a>图片实现</h4><pre><code>H5lock.prototype.drawPoint = function() { // 初始化触碰后样式（图片）
    var imgObj = new Image();
    imgObj.src = this.H5lockImgSrc;
    for (var i = 0 ; i &lt; this.lastPoint.length ; i++) {
        var othis = this;
        this.ctx.clearRect(othis.lastPoint[i].x-(othis.r+2), othis.lastPoint[i].y-(othis.r+2), othis.r*2+4, othis.r*2+4);
        this.ctx.drawImage(imgObj,othis.lastPoint[i].x-(othis.r+1), othis.lastPoint[i].y-(othis.r+1), othis.r*2+2, othis.r*2+2);
    }
}
</code></pre><h4 id="Canvas实现"><a href="#Canvas实现" class="headerlink" title="Canvas实现"></a>Canvas实现</h4><pre><code>H5lock.prototype.drawPoint = function() { // 初始化触碰后样式（Canvas画圆心）
    for (var i = 0 ; i &lt; this.lastPoint.length ; i++) {
        // 填充颜色
        this.ctx.fillStyle = &apos;#CFE6FF&apos;;
        this.ctx.beginPath();
        this.ctx.arc(this.lastPoint[i].x, this.lastPoint[i].y, this.r / 2, 0, Math.PI * 2, true);
        this.ctx.closePath();
        this.ctx.fill();
    }
}
</code></pre><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>报错：<code>Failed to execute &#39;getImageData&#39; on &#39;CanvasRenderingContext2D&#39;: The canvas has been tainted by cross-origin data.</code><br>原因：getImageData此方法不允许操作非此域名外的图片资源，即使是子域也不行<br>解决办法：  </p>
<ul>
<li>使用本地服务器进行测试</li>
<li><a href="http://www.bkjia.com/webzh/994015.html" target="_blank" rel="external">–disable-web-security</a></li>
<li><a href="http://blog.csdn.net/molaifeng/article/details/42293509" target="_blank" rel="external">将图片转换成为字符串保存在浏览器，使用时再转换</a></li>
</ul>
<hr>
<p>H5解锁密码识别功能：<a href="https://github.com/lvming6816077/H5lock" target="_blank" rel="external">https://github.com/lvming6816077/H5lock</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS3 鲜为人知的属性]]></title>
      <url>http://ningbo00.top/2017/02/03/CSS3/</url>
      <content type="html"><![CDATA[<h1 id="CSS3-鲜为人知的属性"><a href="#CSS3-鲜为人知的属性" class="headerlink" title="CSS3 鲜为人知的属性"></a>CSS3 鲜为人知的属性</h1><h2 id="webkit-tap-highlight-color"><a href="#webkit-tap-highlight-color" class="headerlink" title="-webkit-tap-highlight-color"></a>-webkit-tap-highlight-color</h2><p>这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景。要重设这个表现，你可以设置-webkit-tap-highlight-color为任何颜色。<br>想要禁用这个高亮，设置颜色的alpha值为0即可。</p>
<p>示例：设置高亮色为50%透明的红色:  </p>
<pre><code>-webkit-tap-highlight-color: rgba(255,0,0,0.5);
</code></pre><p>浏览器支持: 只有iOS(iPhone和iPad).</p>
<h2 id="webkit-text-size-adjust"><a href="#webkit-text-size-adjust" class="headerlink" title="webkit-text-size-adjust"></a>webkit-text-size-adjust</h2><ol>
<li><p>当样式表里font-size&lt;12px时，中文版chrome浏览器里字体显示仍为12px，这时可以用</p>
<pre><code>html{-webkit-text-size-adjust:none;}
</code></pre></li>
<li><p>-webkit-text-size-adjust放在body上会导致页面缩放失效</p>
</li>
<li><p>body会继承定义在html的样式</p>
</li>
<li><p>用-webkit-text-size-adjust不要定义成可继承的或全局的</p>
</li>
</ol>
<h2 id="outline：none"><a href="#outline：none" class="headerlink" title="outline：none"></a>outline：none</h2><ol>
<li><p>在pc端为a标签定义这个样式的目的是为了取消ie浏览器下点击a标签时出现的虚线。ie7及以下浏览器还不识别此属性，需要在a标签上添加 <code>hidefocus=&quot;true&quot;</code></p>
</li>
<li><p><code>input，textarea{outline:none}</code> 取消chrome下默认的文本框聚焦样式</p>
</li>
<li><p>在移动端是不起作用的，想要去除文本框的默认样式可以使用 <code>-webkit-appearance</code>，聚焦时候默认样式的取消是 <code>-webkit-tap-highlight-color</code> 。看到一些移动端reset文件加了此属性，其实是多余。</p>
</li>
</ol>
<h2 id="webkit-appearance"><a href="#webkit-appearance" class="headerlink" title="webkit-appearance"></a>webkit-appearance</h2><p><code>-webkit-appearance: none;//消除输入框和按钮的原生外观，在iOS上加上这个属性才能给按钮和输入框自定义样式 。</code></p>
<p>注意：不同type的input使用这个属性之后表现不一。text、button无样式，radio、checkbox直接消失</p>
<h2 id="webkit-user-select"><a href="#webkit-user-select" class="headerlink" title="-webkit-user-select"></a>-webkit-user-select</h2><pre><code>-webkit-user-select: none; // 禁止页面文字选择 ，此属性不继承，一般加在body上规定整个body的文字都不会自动调整
</code></pre><h2 id="webkit-touch-callout"><a href="#webkit-touch-callout" class="headerlink" title="-webkit-touch-callout"></a>-webkit-touch-callout</h2><pre><code>-webkit-touch-callout:none;&amp;nbsp;&amp;nbsp;// 禁用长按页面时的弹出菜单(iOS下有效) ,img和a标签都要加
</code></pre><h1 id="CSS3那些不为人知的高级属性"><a href="#CSS3那些不为人知的高级属性" class="headerlink" title="CSS3那些不为人知的高级属性"></a>CSS3那些不为人知的高级属性</h1><p>尽管现代浏览器已经支持了众多的CSS3属性，但是大部分设计师和开发人员貌似依然在关注于一些很“主流”的属性，如border-radius、box-shadow或者transform等。它们有良好的文档、很好的测试并且最常用到，所以如果你最近在设计网站，你很难能脱离它们。</p>
<p>但是，隐藏在浏览器的大宝库中是一些高级的、被严重低估的属性，但是它们并没有得到太多的关注。或许它们中的一些应该这样(被无视)，但是其它的属性应该得到更多的认可。最伟大的财富隐藏在Webkit的下面，而且在iPhone、iPad和Android apps的时代，开始了解它们会灰常有用。就连Firefox等使用的Gecko引擎，也提供了一些独特的属性。在本文中，我们将看一下鲜为人知的CSS 2.1和CSS3属性以及它们在现代浏览器中的支持情况。</p>
<p><strong>说明:</strong>&nbsp;对于每个属性，我们这里规定：”<strong>WebKit</strong>” 即指代使用Webkit内核的浏览器(Safari、Chrome、iPhone、iPad、Android等)，”<strong>Gecko</strong>“指代采用Gecko内核的浏览器(Firefox等)。然后有的属性是官方<a href="http://www.w3.org/TR/CSS21" target="_blank" rel="external"><strong>CSS 2.1.</strong></a>&nbsp;规范的一部分，这意味着更多的浏览器甚至一些古老的浏览器也会支持它们。最后，一个<a href="http://www.w3.org/Style/CSS/current-work" target="_blank" rel="external"><strong>CSS3</strong></a>&nbsp;的标签标明遵守这个标准，被最新的浏览器版本——比如Firefox 4、Chrome 10、Safari 5、Opera 11.10以及IE9支持的属性。</p>
<h2 id="WebKit特有属性"><a href="#WebKit特有属性" class="headerlink" title="WebKit特有属性"></a>WebKit特有属性</h2><h3 id="webkit-mask"><a href="#webkit-mask" class="headerlink" title="-webkit-mask"></a>-webkit-mask</h3><p>这个属性是相当强大的，所以详细的介绍超出了本文的范畴，它非常值得深入研究，因为它可以在实际应用中为你省掉很多时间。</p>
<p><code>-webkit-mask</code> 让为一个元素添加蒙板成为可能，从而你可以创建任意形状的花样。蒙板可以是CSS3渐变或者半透明的PNG图片。蒙板元素的alpha值为0的时候会覆盖下面的元素，为1的时候会完全显示下面的内容。相关的属性有<code>-webkit-mask-clip</code>、 <code>-webkit-mask-position</code> 和<code>-webkit-mask-repeat</code>等，严重依赖来自于background中的语法。更多信息请查看<a href="http://www.webkit.org/blog/181/css-masks" target="_blank" rel="external">webkit的博客</a>。</p>
<p><strong>示例</strong></p>
<p>图片蒙板:</p>
<pre><code>.element{
    background: url(img/image.jpg) repeat;
    -webkit-mask: url(img/mask.png);
}
</code></pre><p><strong>示例</strong></p>
<p>渐变蒙板:</p>
<pre><code>.element2 {
    background: url(img/image.jpg) repeat;
    -webkit-mask: -webkit-gradient(linear, left top, left bottom, from(rgba(0,0,0,1)), to(rgba(0,0,0,0)));
}
</code></pre><p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-SW17" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="webkit-text-stroke"><a href="#webkit-text-stroke" class="headerlink" title="-webkit-text-stroke"></a>-webkit-text-stroke</h3><p>CSS边框的一个不足就是只有矩形的元素才能使用。<code>-webkit-text-stroke</code> 可以为文字添加边框。它不但可以设置文字边框的宽度，也能设置其颜色。而且，配合使用<code>color: transparent</code> 属性，你还可以创建镂空的字体！</p>
<p><strong>示例</strong></p>
<p>为所有的&lt;h1&gt;标题设定一个2px宽的蓝色边框:</p>
<pre><code>h1{-webkit-text-stroke: 2px blue};
</code></pre><p>另一个特性是，通过设定1px的透明边框，可以让文字变得平滑:</p>
<pre><code>h2{-webkit-text-stroke: 1px transparent}
</code></pre><p>创建红色镂空字体：</p>
<pre><code>h3{
    color: transparent;
    -webkit-text-stroke: 4px red;
}
</code></pre><p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/css/property/-webkit-text-stroke" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="webkit-nbsp-mode"><a href="#webkit-nbsp-mode" class="headerlink" title="-webkit-nbsp-mode"></a>-webkit-nbsp-mode</h3><p>换行有时是很棘手的事情：有时你希望文字在适当的地方断行(而不是折行)，有时你又不想这样。一个能控制这个的属性就是 <code>-webkit-nbsp-mode</code>，它让你可以改变&amp;nbsp;空白符的行为，强制文字在它被用到的地方断行。通过设置值为space即可实现。</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266--webkit-nbsp-mode" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="webkit-tap-highlight-color-1"><a href="#webkit-tap-highlight-color-1" class="headerlink" title="-webkit-tap-highlight-color"></a>-webkit-tap-highlight-color</h3><p>这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景。要重设这个表现，你可以设置<code>-webkit-tap-highlight-color</code> 为任何颜色。</p>
<p>想要禁用这个高亮，设置颜色的alpha值为0即可。</p>
<p><strong>示例</strong></p>
<p>设置高亮色为50%透明的红色:</p>
<pre><code>-webkit-tap-highlight-color: rgba(255,0,0,0.5);
</code></pre><p><strong>浏览器支持</strong>: 只有iOS(iPhone和iPad).</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-_webkit_tap_highlight_color" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="zoom-reset"><a href="#zoom-reset" class="headerlink" title="zoom: reset"></a>zoom: reset</h3><p>通常来说，zoom是一个IE专用的属性。但是webkit也开始支持它了，而且使用值reset，webkit可以实现不错的效果(有趣的是，IE不支持这个值)。它让你重设掉浏览器中正常的缩放行为——如果某个元素被声明了<code>zoom:reset</code>，页面上的<strong>其它元素</strong>在用户放大页面的时候都会跟着放大。</p>
<p>注：其实，我们常用来禁用chrome强制字体大小的时候用到的<code>-webkit-text-size-adjust:none;</code>也是可以实现类似的效果，不同的是，设置该属性的元素内的文字不会被放大/缩小，但是页面上的其它元素则会变化——神飞</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-SW15" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="webkit-margin-collapse"><a href="#webkit-margin-collapse" class="headerlink" title="-webkit-margin-collapse"></a>-webkit-margin-collapse</h3><p>这个属性属于限制级的，但是它还是非常值得关注。通常，两个相邻的元素的margin会折叠起来(collapse)。这意味着第一个元素的底部的边距和第二个元素的头部边距会被合并到一起。</p>
<p>最常见的例子就是两个相邻的&lt;p&gt;元素会共享他们的margin值。想要控制这个表现，我们可以使用 <code>-webkit-margin-collapse</code> 及其分拆后的 <code>-webkit-margin-top-collapse</code> 、<code>-webkit-margin-bottom-collapse</code> 等属性。默认值是collapse，值separate则停止共享margin值，也就是说，第一个元素的底部边距和第二个元素的头部边距会正常叠加。</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266--webkit-margin-collapse" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="webkit-box-reflect"><a href="#webkit-box-reflect" class="headerlink" title="-webkit-box-reflect"></a>-webkit-box-reflect</h3><p>你还记得几乎每个网站都把他们的网站logo或者头部的文字做成倒影的那个年代吗？谢天谢地，那个年代已经过去了，但是如果你要在一些按钮、导航、或者其他UI元素上更好的使用这个技术，<code>-webkit-box-reflect</code> 是更好的选择。</p>
<p>这个属性接受above、below、left和right四个关键词，它们设置倒影的方向，它们和一个设置元素和它的倒影建的距离的数字一起使用。同时，蒙板图片也是同样支持的(看上面的-webkit-mask部分，不要搞混了哈)。倒影会自动生成并对布局<strong>没有影响</strong>。下面的元素只用了CSS，第二个按钮用了<code>-webkit-box-reflect</code> 属性。</p>
<p><strong>示例</strong></p>
<p>这个倒影会出现在它的父元素的下面并有5px的间距:</p>
<pre><code>-webkit-box-reflect: below 5px;
</code></pre><p>这个倒影会投射到元素的右边，没有间距。然后，一个蒙板将会被应用(url(mask.png)):</p>
<pre><code>-webkit-box-reflect: right 0 url(mask.png);
</code></pre><p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-SW16" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="webkit-marquee"><a href="#webkit-marquee" class="headerlink" title="-webkit-marquee"></a>-webkit-marquee</h3><p>另一个属性让我们回到美好的从前：那个遍地marquee(跑马灯)的年代。有趣的是这个已经被遗弃的标签反而在现在变的很有用，比如我们在比较小的手机屏幕上切换内容，如果不断行的话文字将不能完全显示。</p>
<p><a href="http://i.ozpda.com/ozweather/" target="_blank" rel="external">ozPDA</a>创建的这个天气的应用很好的使用了它。 (如果你木有看到变换的文字，可以尝试换一个城市来体验。需要使用WebKit内核浏览器)</p>
<p><strong>示例</strong></p>
<pre><code>.marquee {
    white-space: nowrap;
    overflow:-webkit-marquee;
    width: 70px;
    -webkit-marquee-direction: forwards;
    -webkit-marquee-speed: slow;
    -webkit-marquee-style: alternate;
}
</code></pre><p>要让marquee工作需要一些前提条件。首先，white-space必须设置为nowrap，这样才能让文字不自动换行，其次，overflow必须设置为-webkit-marquee，宽度也要设置为比文字实际长度小的数值。</p>
<p>剩下的属性确保文字从左边滚动到右边(<code>-webkit-marquee-direction</code>)、来回移动(<code>-webkit-marquee-style</code>)以及以比较低的速度移动(<code>-webkit-marquee-speed</code>)。其它的属性有-<code>webkit-marquee-repetition</code>，用来定义marquee重复的次数，<code>-webkit-marquee-increment</code>, 定义每次递增的速度变化。</p>
<p>注：虽然HTML的marquee标签在XHTML中被抛弃了，但是各浏览器还是支持的，但是有一个问题就是，marquee标签可能会占用比较大的cpu，<a href="http://ooxx.me/" target="_blank" rel="external">大猫</a>对其进行了深入的研究，结论是marquee的速度不能太快，而webkit用-webkit-marquee属性是最好的——神飞。</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-_webkit_marquee" target="_blank" rel="external">Safari Developer Library</a></p>
<h2 id="Gecko特有属性"><a href="#Gecko特有属性" class="headerlink" title="Gecko特有属性"></a>Gecko特有属性</h2><h3 id="font-size-adjust"><a href="#font-size-adjust" class="headerlink" title="font-size-adjust"></a>font-size-adjust</h3><p>这个有用的CSS3属性目前只有Firefox支持。我们可以用它来设定指定元素的文字大小(font-size)应该相对于小写字母的高度(x-height)而不是大写字母的高度(cap height)。比如，Verdana比同型号的Times字体更清晰，它有着更矮的x-height。为了弥补这个缺陷，我们可以用font-size-adjust属性来纠正后者。</p>
<p>该属性在拥有不同的x-height的字体上非常有用。即便你在小心的使用小号字体，在问题出现时<code>font-size-adjust</code> 也能提供解决方案。</p>
<p><strong>示例</strong></p>
<p>如果由于某种原因用户的电脑上没有安装Verdana，那么Arial就会被修正，从而和Verdana有相同的长宽比(0.58)。</p>
<pre><code>p{
    font-family:Verdana, Arial, sans-serif;
    font-size: 12px;
    font-size-adjust: 0.58;
}
</code></pre><p><strong>浏览器支持</strong>: Gecko.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="https://developer.mozilla.org/en/CSS/font-size-adjust" target="_blank" rel="external">Mozilla Developer Network</a></p>
<h3 id="image-rendering"><a href="#image-rendering" class="headerlink" title="image-rendering"></a>image-rendering</h3><p>n年前，图片并不会被按照其原始大小显示，而是被设计师给缩放掉。取决于缩放的大小和上下文，图片可能会在浏览器中展现的不太好或者干脆就是错掉了的。现在，浏览器有了更好的算法来显示缩放的图片，不过，在你的图片被缩放后完全的控制其表现也是件很赞的事情。</p>
<p>如果你的图片有比较锐的线条并希望他们在缩放后保持它，这个Gecko私有属性就显得特别有用。相关的值是-moz-crisp-edges。同样的算法也用在optimizeSpeed，而auto 和optimizeQuality 定义为标准行为(用可行的最佳质量来缩放元素)。 image-rendering 属性同样可以用于&lt;video&gt; 和&lt;canvas&gt;元素，和用于背景图片一样。这是个CSS3 标准属性，但是目前只有Firefox支持。</p>
<p>值得注意的是，<code>-ms-interpolation-mode: bicubic</code>，尽管它是个IE专有属性。然而，它让Internet Explorer 7 在缩放图片后将其渲染为比较高的质量。由于这个浏览器默认处理的很烂，所以这个属性可能会很有用。</p>
<p><strong>浏览器支持</strong>: Gecko.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="https://developer.mozilla.org/en/CSS/image-rendering" target="_blank" rel="external">Mozilla Developer Network</a></p>
<h3 id="moz-border-top-colors"><a href="#moz-border-top-colors" class="headerlink" title="-moz-border-top-colors"></a>-moz-border-top-colors</h3><p>这个属性可以归类为’养眼’。它让你可以在border宽度大于1px的时候为其设置不同的边框颜色。当然<code>-moz-border-bottom-colors</code>, <code>-moz-border-left-colors</code> 和 <code>-moz-border-right-colors</code>也是可用的。</p>
<p>不爽的是，没有一个简写的 <code>-moz-border-colors</code> 缩写，所以每个边框都要分开设置。同时，border-width要和给到的颜色的数量保持一致，否则，最后的那个颜色值会填充到剩下的宽度。</p>
<p><strong>示例</strong></p>
<p>这个例子中，元素的左右两边边框会是标准的橙色，上下则有种类似渐变的颜色——红黄蓝三色。</p>
<pre><code>div {
    border: 3px solid orange;
    -moz-border-top-colors: red yellow blue;
    -moz-border-bottom-colors: red yellow blue;
}
</code></pre><p><strong>浏览器支持</strong>: Gecko.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="https://developer.mozilla.org/en/CSS/-moz-border-top-colors" target="_blank" rel="external">Mozilla Developer Network</a></p>
<h2 id="混合属性"><a href="#混合属性" class="headerlink" title="混合属性"></a>混合属性</h2><h3 id="webkit-user-select-和-moz-user-select"><a href="#webkit-user-select-和-moz-user-select" class="headerlink" title="-webkit-user-select 和 -moz-user-select"></a>-webkit-user-select 和 -moz-user-select</h3><p>或许你常常不希望用户在你的网站上选择文本，无论是否是出于版权的原因。通常大家会有js来实现，另一个方案就是，将-webkit-user-select 和-moz-user-select 的值设为none。</p>
<p>请谨慎使用这个属性：因为大部分用户是来查看信息的，他们可以复制并存储下来以备将来之用，所以这种方法既无用也无效。如果你禁用了复制粘贴功能，用户还是可以通过查看源文件来获取到他们想要的内容。搞不懂这个属性为什么会被webkit和gecko支持。</p>
<p><strong>浏览器支持</strong>: WebKit, Gecko.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/css/property/-webkit-text-stroke" target="_blank" rel="external">Safari Developer Library</a>,&nbsp;<a href="https://developer.mozilla.org/en/CSS/-moz-user-select" target="_blank" rel="external">Mozilla Developer Network</a></p>
<h3 id="webkit-appearance-和-moz-appearance"><a href="#webkit-appearance-和-moz-appearance" class="headerlink" title="-webkit-appearance 和 -moz-appearance"></a>-webkit-appearance 和 -moz-appearance</h3><p>你曾经想过将一张图片伪装成单选按钮么？或者，一个输入框看起来像一个复选框？那么现在appearance 出现了。即便你并不想要让一个链接看起来总是像个按钮，下面这个例子也可以让你了解到，只要你愿意就可以做到的：</p>
<p><strong>示例</strong></p>
<pre><code>a {
    -webkit-appearance: button;
    -moz-appearance: button;
}
</code></pre><p><strong>浏览器支持</strong>: WebKit, Gecko.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/css/property/-webkit-text-stroke" target="_blank" rel="external">Safari Developer Library</a>,&nbsp;<a href="https://developer.mozilla.org/en/CSS/-moz-appearance" target="_blank" rel="external">Mozilla Developer Network</a>,&nbsp;<a href="https://developer.mozilla.org/en/CSS/text-align" target="_blank" rel="external">Mozilla Developer Network</a>,<a href="http://www.qianduan.net/css3-appearance.html" title="CSS3 appearance简介" target="_blank" rel="external">CSS3 appearance简介</a></p>
<h3 id="text-align-moz-center-webkit-center"><a href="#text-align-moz-center-webkit-center" class="headerlink" title="text-align: -moz-center/-webkit-center"></a>text-align: -moz-center/-webkit-center</h3><p>这是一个属性（或者精确来说，是个“属性值”）的存在很让人惊喜啊。要让一个块级元素居中，大家通常将其设置为margin:0 auto。但是，现在你也可以将元素的容器的text-align属性设置为-moz-center 和 -webkit-center。相应的，你也可以通过设置-moz-left、-webkit-left或-moz-right、-webkit-right将元素居左或者居右。</p>
<p><strong>浏览器支持</strong>: WebKit, Gecko.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-text-align" target="_blank" rel="external">Safari Developer Library</a></p>
<h2 id="CSS-2-1属性"><a href="#CSS-2-1属性" class="headerlink" title="CSS 2.1属性"></a>CSS 2.1属性</h2><h3 id="counter-increment"><a href="#counter-increment" class="headerlink" title="counter-increment"></a>counter-increment</h3><p>你是否经常希望你可以让一个有序列表或者一篇文章的所有标题自动编号？不幸的是，目前尚未有CSS3属性支持。但是在CSS 2.1中，counter-increment 提供了一个解决方案。这就意味着它已经出现好些年了，而且在IE8中就已经支持了。</p>
<p>配合:before 伪元素和content 属性，counter-increment可以为所有的HTML标签添加自动的编号。即便是嵌套的编码也是支持的。</p>
<p><strong>示例</strong></p>
<p>要给标题编码，先将计算器重设一下:</p>
<pre><code>body{counter-reset: thecounter}
</code></pre><p>下面的样式让每一个&lt;h1&gt;标题都有一个”Section”的前缀，然后其后面的数字自动的递增1(这是默认的，可以省略掉)，这里thecounter是计算器的名称:</p>
<pre><code>.counter h1:before {
    counter-increment: thecounter 1;
    content:&quot;Section&quot;counter(thecounter)&quot;:&quot;;
}
</code></pre><p><strong>示例</strong></p>
<p>对于一个嵌套编码的列表，重设计数器，然后关掉&lt;ol&gt;的自动编码，因为它是无嵌套的:</p>
<pre><code>ol {
    counter-reset: section;
    list-style-type: none;
}
</code></pre><p>然后，每个&lt;li&gt;设置为自动编号，分割符是一个点(.)，后面跟着一个空格</p>
<pre><code>li:before {
    counter-increment: section;
    content: counters(section,&quot;.&quot;)&quot;&quot;;
}
</code></pre><p>HTML代码：</p>
<pre><code>&lt;ol&gt;
    &lt;li&gt;item&lt;/li&gt; &lt;!-- 1 --&gt;
    &lt;li&gt;item &lt;!-- 2 --&gt;
        &lt;ol&gt;
            &lt;li&gt;item&lt;/li&gt; &lt;!-- 1.1 --&gt;
            &lt;li&gt;item&lt;/li&gt; &lt;!-- 1.2 --&gt;
        &lt;/ol&gt;
    &lt;/li&gt;
    &lt;li&gt;item&lt;/li&gt; &lt;!-- 3 --&gt;
&lt;ol&gt;
</code></pre><p><strong>浏览器支持</strong>: CSS 2.1.，所有的现代浏览器，IE 7+.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://www.w3.org/TR/CSS21/generate.html#counters" target="_blank" rel="external">W3C</a>，<a href="http://www.qianduan.net/css-content-counter-increment-counter-reset.html" target="_blank" rel="external">CSS content, counter-increment 和 counter-reset详解</a></p>
<h3 id="quotes"><a href="#quotes" class="headerlink" title="quotes"></a>quotes</h3><p>你会因为你的CMS不知道如何正确转换引用符号而纠结么？那么开始使用quotes属性吧。这样你就可以自定义任何符号了。然后你就可以用:before和:after伪元素为任何期望的元素指定引号了，悲催的是，webkit浏览器不支持这个属性——经测试，chrome 11已经开始支持这个属性了（之前的版本没有测试）。</p>
<p><strong>示例</strong></p>
<p>前面的两个符号决定第一级引用内容的引号，后面的两个用于二级引用，以此类推：</p>
<pre><code>q{
    quotes: &apos;«&apos; &apos;»&apos; &quot;‹&quot; &quot;›&quot;;
}
</code></pre><p>下面两行用于为选定元素指定引号:</p>
<pre><code>q:before {content: open-quote}
q:after {content: close-quote}
</code></pre><p>这样，&lt;p&gt;&lt;q&gt;This is a very &lt;q&gt;nice&lt;/q&gt; quote.&lt;/q&gt;&lt;/p&gt;看起来将会是酱紫的：<br><strong>«This is a very ‹nice› quote.»</strong></p>
<p><strong>浏览器支持</strong>: CSS 2.1.,除了WebKit，IE 7和IE6的所有现代浏览器。不过chrome是支持的。。。</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://www.w3.org/TR/CSS2/generate.html#quotes" target="_blank" rel="external">W3C</a></p>
<p><strong>问题：</strong>要直接的添加符号，CSS文档必须要设置为UTF-8吗？这是一个很纠结的问题。遗憾的是，我不能给出一个明确的答案。我的经验是，不必要设置什么特定的字符集，然后utf-8字符集可能会出错，因为它显示错掉的字符(比如”»”)。而是用iso-8859-1 字符集，一切就都是正常的。</p>
<p>W3C<a href="http://www.w3.org/TR/CSS21/generate.html" target="_blank" rel="external">这样描述</a>：”由于上个例子中由’quotes’定义的引号方便的定位在电脑键盘上，高质量的字符则需要不同的10646字符集。”</p>
<h2 id="你或许听说过但是没有记住的CSS3属性"><a href="#你或许听说过但是没有记住的CSS3属性" class="headerlink" title="你或许听说过但是没有记住的CSS3属性"></a>你或许听说过但是没有记住的CSS3属性</h2><p>接近尾声，让我们重温一些不太流行的以及不像border-radius和box-shadow那样被广泛需求的CSS3属性。</p>
<h3 id="text-overflow"><a href="#text-overflow" class="headerlink" title="text-overflow"></a>text-overflow</h3><p>或许你会常常遇到这个问题：某个容器对于其内的文字来说太小了，然后你不得不用javascript来截断字符串并添加”…”符号以避免文字溢出。</p>
<p>忘掉它吧！采用CSS3和text-overflow: ellipsis，如果文字比它的容器的宽度要长的话，你就可以强制文字以”…”结束它。唯一的要求是设置overflow:hidden。不幸的是，Firefox不支持这个属性，但是貌似在最近的版本中将会提供支持。</p>
<p><strong>示例</strong></p>
<pre><code>div {
    width: 100px;
    text-overflow: ellipsis;
}
</code></pre><p><strong>浏览器支持</strong>: CSS 3，所有浏览器的最新版本，除了Firefox，IE从IE6开始支持，据说Firefox到6.0也会提供支持的——希望如此吧。</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://www.w3.org/TR/2010/WD-css3-text-20101005/#text-overflow" target="_blank" rel="external">W3C</a></p>
<h3 id="word-wrap"><a href="#word-wrap" class="headerlink" title="word-wrap"></a>word-wrap</h3><p>当文字在一个比较窄的容器中时，它的某个部分可能会因为太长而不能正确的换行。比如链接就常常引起问题。如果你不想用overflow: hidden隐藏溢出的文字，那么你就可以设置 word-wrap 为break-word，它可以让字符串在到达容器的宽度限制时换行。</p>
<p><strong>示例</strong></p>
<pre><code>div{
    width: 50px;
    word-wrap: break-word;
}
</code></pre><p><strong>浏览器支持</strong>: CSS 3，所有现代浏览器。</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://www.w3.org/TR/2011/WD-css3-text-20110215/#word-wrap" target="_blank" rel="external">W3C</a></p>
<h3 id="resize"><a href="#resize" class="headerlink" title="resize"></a>resize</h3><p>如果你在使用Firefox或Chrome，那么你肯定注意到了文本框的右下角默认有个小的手柄，它可以让你调整它们的大小。这个标准的行为由CSS3 属性 resize: both实现。</p>
<p>但是它并不仅限于textarea。它可以用于所有的HTML元素。horizontal 和 vertical 值用于控制调整水平方向还是垂直方向。</p>
<p>请注意：对于display:block元素，如果设置了overflow:visible，resize属性将会无效(这一点原文描述不详——by 神飞)。</p>
<p><strong>浏览器支持</strong>: CSS3, 除了Opera和IE以为的其它最新的浏览器。</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-resize" target="_blank" rel="external">Safari Developer Library</a></p>
<h3 id="background-attachment"><a href="#background-attachment" class="headerlink" title="background-attachment"></a>background-attachment</h3><p>当你为一个设置了 <code>overflow:auto</code> 的元素指定背景图片的时候，当内容太多而出现滚动条后，拖动滚动条就会发现背景图片的位置是固定的，而不是随着滚动条移动。如果你想要背景图片随着内容而滚动，可以设置 <code>background-attachment:local</code> 。</p>
<p><strong>浏览器支持</strong>: CSS 3，除了Firefox以外的所有现代浏览器，Firefox是<strong>支持</strong>background-attachment属性的，只是<a href="https://developer.mozilla.org/en/CSS/background-attachment" target="_blank" rel="external">不支持local值</a>.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://www.w3.org/TR/2011/WD-css3-text-20110215/#word-wrap" target="_blank" rel="external">W3C</a></p>
<h3 id="text-rendering"><a href="#text-rendering" class="headerlink" title="text-rendering"></a>text-rendering</h3><p>随着越来越多的网站开始用@font-face来渲染文字，易读性开始被关注了。小号字体上，文字会更容易出现。由于目前还没有CSS属性控制显示在线字体的微妙细节，你可以利用text-rendering来启用<a href="http://en.wikipedia.org/wiki/Kerning" target="_blank" rel="external">kerning</a>&nbsp;和&nbsp;<a href="http://en.wikipedia.org/wiki/Typographic_ligature" target="_blank" rel="external">ligatures</a>。</p>
<p>Gecko 和WebKit 浏览器处理这个属性的方式很不一样。前者默认启用这个特性，而后者，你需要将其设置为optimizeLegibility。</p>
<p><strong>浏览器支持</strong>: CSS3, 所有WebKit 和Firefox浏览器.</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://www.w3.org/TR/2011/WD-css3-text-20110215/#word-wrap" target="_blank" rel="external">W3C</a></p>
<h3 id="transform-rotateX-transform-rotateY"><a href="#transform-rotateX-transform-rotateY" class="headerlink" title="transform: rotateX/transform: rotateY"></a>transform: rotateX/transform: rotateY</h3><p>如果你已经开始使用CSS3，那么你可能会比较熟悉 <code>transform: rotate()</code>，这个在z轴上旋转元素的属性。</p>
<p>但是你是否也知道，它也可以更深入的旋转的(比如，围绕x轴和y轴)？ 这些变形结合<code>-webkit-backface-visibility: hidden</code> 会更合适。</p>
<p><strong>示例</strong></p>
<p>如果你鼠标经过这个元素，它将会旋转180°，倒转过来:</p>
<pre><code>div:hover {
    transform: rotateY(180deg);
}
</code></pre><p><strong>小技巧:</strong>如果只是映射一个元素，你可以设置transform为rotateX(180deg) (对应rotateY)或者设置transform 为scaleX(-1) (对应scaleY).</p>
<p><strong>浏览器支持</strong>: CSS3, WebKit、firefox、Opera以及IE9</p>
<p><strong>扩展阅读</strong>:&nbsp;<a href="http://www.w3.org/TR/2011/WD-css3-text-20110215/#word-wrap" target="_blank" rel="external">W3C</a>，<a href="http://www.qianduan.net/what-you-need-to-know-about-behavioral-css.html" title="Permanent Link: 你需要知道的CSS3 动画技术" target="_blank" rel="external">你需要知道的CSS3 动画技术</a></p>
<hr>
<p>原文链接：<a href="http://www.cnblogs.com/libin-1/p/5903350.html" target="_blank" rel="external">http://www.cnblogs.com/libin-1/p/5903350.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[web前端建站与学习常用网站]]></title>
      <url>http://ningbo00.top/2016/12/10/f2e-websites/</url>
      <content type="html"><![CDATA[<h1 id="web前端建站与学习常用网站"><a href="#web前端建站与学习常用网站" class="headerlink" title="web前端建站与学习常用网站"></a>web前端建站与学习常用网站</h1><h2 id="HTML常用手册网站"><a href="#HTML常用手册网站" class="headerlink" title="HTML常用手册网站"></a>HTML常用手册网站</h2><p>html手册，Sublime常用插件，图书、博客</p>
<p>HTML、CSS、JS在各浏览器兼容情况：<a href="http://caniuse.com/" target="_blank" rel="external">http://caniuse.com/</a></p>
<p>前端知识体系：<a href="http://www.cnblogs.com/sb19871023/p/3894452.html" target="_blank" rel="external">http://www.cnblogs.com/sb19871023/p/3894452.html</a></p>
<p>w3school在线教程：<a href="http://www.w3school.com.cn/" target="_blank" rel="external">http://www.w3school.com.cn/</a></p>
<p>菜鸟教程：<a href="http://www.runoob.com/" target="_blank" rel="external">http://www.runoob.com/</a></p>
<p>图灵程序设计丛书HTML5权威指南免费电子书：<a href="http://bestcbooks.com/B00H706BIG/" target="_blank" rel="external">http://bestcbooks.com/B00H706BIG/</a></p>
<hr>
<p>全栈开发必备的10款Sublime Text插件：<a href="http://www.php100.com/html/it/focus/2014/1128/7935.html" target="_blank" rel="external">http://www.php100.com/html/it/focus/2014/1128/7935.html</a></p>
<p>Sublime Text插件官网：<a href="https://packagecontrol.io/" target="_blank" rel="external">https://packagecontrol.io/</a></p>
<p>Sublime Text Emmet插件：<a href="http://docs.emmet.io/" target="_blank" rel="external">http://docs.emmet.io/</a></p>
<hr>
<h2 id="CSS工具网站"><a href="#CSS工具网站" class="headerlink" title="CSS工具网站"></a>CSS工具网站</h2><p>css3测试、计算工具</p>
<p>在线生成CSS代码：<a href="http://enjoycss.com/ref/chrome_extension#transform" target="_blank" rel="external">http://enjoycss.com/ref/chrome_extension#transform</a></p>
<p>CSS3动画手册、动画代码生成：<a href="http://isux.tencent.com/css3/index.html?transition-property" target="_blank" rel="external">http://isux.tencent.com/css3/index.html?transition-property</a></p>
<p>Animate.css官网：<a href="https://daneden.github.io/animate.css/" target="_blank" rel="external">https://daneden.github.io/animate.css/</a></p>
<p>贝塞尔曲线绘制取值网站：<a href="http://cubic-bezier.com/?#.17,.67,.83,.67" target="_blank" rel="external">http://cubic-bezier.com/?#.17,.67,.83,.67</a></p>
<p>px转em计算网站：<a href="http://pxtoem.com/" target="_blank" rel="external">http://pxtoem.com/</a></p>
<p>雪碧图自动生成网站：<a href="http://www.spritecow.com/" target="_blank" rel="external">http://www.spritecow.com/</a></p>
<hr>
<h2 id="字体、艺术字引用网站集合："><a href="#字体、艺术字引用网站集合：" class="headerlink" title="字体、艺术字引用网站集合："></a>字体、艺术字引用网站集合：</h2><p>Handpicked字体：<a href="https://www.fontsquirrel.com/" target="_blank" rel="external">https://www.fontsquirrel.com/</a></p>
<p>阿里妈妈webfont平台：<a href="http://www.iconfont.cn/webfont/?spm=a313x.7781069.0.0.f2EDD4#!/webfont/index" target="_blank" rel="external">http://www.iconfont.cn/webfont/?spm=a313x.7781069.0.0.f2EDD4#!/webfont/index</a></p>
<p>谷歌字体（需墙）：<a href="https://www.google.com/fonts" target="_blank" rel="external">https://www.google.com/fonts</a></p>
<p>阿里巴巴矢量图标库：<a href="http://www.iconfont.cn/" target="_blank" rel="external">http://www.iconfont.cn/</a></p>
<p>适用Bootstrap图标网站：<a href="http://www.bootcss.com/p/font-awesome/#integration" target="_blank" rel="external">http://www.bootcss.com/p/font-awesome/#integration</a></p>
<hr>
<h2 id="JavaScript常用网站"><a href="#JavaScript常用网站" class="headerlink" title="JavaScript常用网站"></a>JavaScript常用网站</h2><p>jquery、轮播图、瀑布流框架、js深度学习</p>
<p>jQuery中文网：<a href="http://jquery.cuishifeng.cn/index.html" target="_blank" rel="external">http://jquery.cuishifeng.cn/index.html</a></p>
<p>轮播图框架Swiper中文网：<a href="http://www.swiper.com.cn/" target="_blank" rel="external">http://www.swiper.com.cn/</a></p>
<p>瀑布流框架：<a href="http://masonry.desandro.com/" target="_blank" rel="external">http://masonry.desandro.com/</a></p>
<p>Tween算法：<a href="http://www.cnblogs.com/bluedream2009/archive/2010/06/19/1760909.html" target="_blank" rel="external">http://www.cnblogs.com/bluedream2009/archive/2010/06/19/1760909.html</a></p>
<p>移动端touch.js：<a href="http://blog.csdn.net/libin_1/article/details/50534611" target="_blank" rel="external">http://blog.csdn.net/libin_1/article/details/50534611</a></p>
<h2 id="JavaScript深度学习"><a href="#JavaScript深度学习" class="headerlink" title="JavaScript深度学习"></a>JavaScript深度学习</h2><p>推荐javascript-in-one-pic </p>
<p>js深度体系学习（js-in-one-pic）：<a href="https://github.com/coodict/javascript-in-one-pic/blob/master/README-zh.md" target="_blank" rel="external">https://github.com/coodict/javascript-in-one-pic/blob/master/README-zh.md</a></p>
<p>图解javascipt上下文与作用域：<a href="http://www.108js.com/article/article1/10201.html?id=1092" target="_blank" rel="external">http://www.108js.com/article/article1/10201.html?id=1092</a></p>
<p>js原型对象理解：<a href="http://blog.csdn.net/liwenqiang758/article/details/8190263" target="_blank" rel="external">http://blog.csdn.net/liwenqiang758/article/details/8190263</a></p>
<p>巧用apply、call、bind：<a href="http://www.admin10000.com/document/6711.html" target="_blank" rel="external">http://www.admin10000.com/document/6711.html</a></p>
<p>原生js封装Ajax：<a href="http://www.jb51.net/article/93037.htm" target="_blank" rel="external">http://www.jb51.net/article/93037.htm</a></p>
<hr>
<h2 id="PHP基础学习"><a href="#PHP基础学习" class="headerlink" title="PHP基础学习"></a>PHP基础学习</h2><p>php基础、json、ajax</p>
<p>PHP手册：<a href="http://www.php.net/" target="_blank" rel="external">http://www.php.net/</a></p>
<p>代码状态百科：<a href="http://baike.baidu.com/view/1311386.htm" target="_blank" rel="external">http://baike.baidu.com/view/1311386.htm</a></p>
<p>json在线校验工具：<a href="http://www.kjson.com/" target="_blank" rel="external">http://www.kjson.com/</a></p>
<p>URL编码/解码：<a href="http://tool.oschina.net/encode?type=4" target="_blank" rel="external">http://tool.oschina.net/encode?type=4</a></p>
<hr>
<h2 id="AnjularJS常用"><a href="#AnjularJS常用" class="headerlink" title="AnjularJS常用"></a>AnjularJS常用</h2><p>AnjularJS学习、工具</p>
<p>AnjularJS菜鸟教程：<a href="http://www.runoob.com/angularjs/angularjs-tutorial.html" target="_blank" rel="external">http://www.runoob.com/angularjs/angularjs-tutorial.html</a></p>
<p>AnjularJS API文档：<a href="https://angularjs.org/" target="_blank" rel="external">https://angularjs.org/</a></p>
<p>AnjularJS源码下载/CDN服务：<a href="http://www.bootcdn.cn/angular.js/" target="_blank" rel="external">http://www.bootcdn.cn/angular.js/</a></p>
<p>最适用工具WebStorm：<a href="http://www.jetbrains.com/webstorm/" target="_blank" rel="external">http://www.jetbrains.com/webstorm/</a></p>
<p>WebStorm主题：<a href="https://github.com/daylerees/colour-schemes/tree/master/jetbrains" target="_blank" rel="external">https://github.com/daylerees/colour-schemes/tree/master/jetbrains</a></p>
<p>WebStorm2016.2.3：<a href="http://www.wuleba.com/28503.html" target="_blank" rel="external">http://www.wuleba.com/28503.html</a></p>
<hr>
<h2 id="前端进阶高级工具"><a href="#前端进阶高级工具" class="headerlink" title="前端进阶高级工具"></a>前端进阶高级工具</h2><p>前端高效开发工具</p>
<p>浏览器同步测试工具（自动刷新浏览器）：<a href="http://www.browsersync.cn/" target="_blank" rel="external">http://www.browsersync.cn/</a></p>
<p>在线压缩图片网站：<a href="https://tinypng.com/" target="_blank" rel="external">https://tinypng.com/</a></p>
<p>贴图库（免费生成图片外链）：<a href="http://www.tietuku.com/" target="_blank" rel="external">http://www.tietuku.com/</a></p>
<p>前端语言Top100实时排名：<a href="https://www.awesomes.cn/rank/?sort=hot" target="_blank" rel="external">https://www.awesomes.cn/rank/?sort=hot</a></p>
<hr>
<h2 id="建站工具"><a href="#建站工具" class="headerlink" title="建站工具"></a>建站工具</h2><p>小工具，建站必备</p>
<p>白噪音（雨声、咖啡店…）：<a href="http://soundrown.com/" target="_blank" rel="external">http://soundrown.com/</a></p>
<p>无版权高清大图：<a href="http://www.ssyer.com/" target="_blank" rel="external">http://www.ssyer.com/</a></p>
<p>Bootstrap中文网：<a href="http://www.bootcss.com/" target="_blank" rel="external">http://www.bootcss.com/</a></p>
<p>SVN团队必备：<a href="https://tortoisesvn.net/downloads.html" target="_blank" rel="external">https://tortoisesvn.net/downloads.html</a></p>
<p>SVN源代码托管中心：<a href="http://svnchina.com/" target="_blank" rel="external">http://svnchina.com/</a></p>
<p>GitHub个人博客建站Hexo：<a href="https://hexo.io/" target="_blank" rel="external">https://hexo.io/</a></p>
<p>付费个人建站：<a href="https://www.strikingly.com/" target="_blank" rel="external">https://www.strikingly.com/</a></p>
<p>Markdown语法说明：<a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">http://wowubuntu.com/markdown/</a></p>
<p>以上网站都是自己在学习和网站建设中常用的网站，一个好的工具往往可以事半功倍，在日后学习中会继续更新。</p>
<p>自己在学习html、css、js、jq、php、微信开发、AnjularJS的笔记与总结，优化无止境：<a href="https://github.com/NalvyBoo/HTML5" target="_blank" rel="external">https://github.com/NalvyBoo/HTML5</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[javaScript和jQuery实现拖拽效果]]></title>
      <url>http://ningbo00.top/2016/11/10/js-and-jq-drag/</url>
      <content type="html"><![CDATA[<h1 id="javaScript实现拖拽效果"><a href="#javaScript实现拖拽效果" class="headerlink" title="javaScript实现拖拽效果"></a>javaScript实现拖拽效果</h1><p>鼠标按下移动或者手指拖动对象，对象随之移动，鼠标放开或者手指离开屏幕，对象停止移动。</p>
<h2 id="Event对象介绍"><a href="#Event对象介绍" class="headerlink" title="Event对象介绍"></a>Event对象介绍</h2><p>Event对象代表事件的状态，比如事件在其中发生的元素、键盘按键的状态、鼠标的位置、鼠标按钮的状态。</p>
<p>事件通常与函数结合使用，函数不会在事件发生前被执行。</p>
<h3 id="事件句柄"><a href="#事件句柄" class="headerlink" title="事件句柄"></a>事件句柄</h3><ul>
<li>onmousedown 鼠标按钮被按下</li>
<li>onmousemove 鼠标被移动</li>
<li>onmouseup 鼠标从某元素移开</li>
</ul>
<h3 id="鼠标属性"><a href="#鼠标属性" class="headerlink" title="鼠标属性"></a>鼠标属性</h3><ul>
<li>clientX 返回返回当事件被触发时鼠标指针向对于浏览器页面（或客户区）的水平坐标。</li>
<li>注释：2 级 DOM 没有提供把窗口坐标转换为文档坐标的标准方法。在 IE 以外的浏览器，使用 window.pageXOffset 和 window.pageYOffset 即可。</li>
<li>clientY 返回当事件被触发时鼠标指针向对于浏览器页面（客户区）的垂直坐标。</li>
<li>注释：注意，该坐标不考虑文档的滚动。如果事件发生在窗口的顶部，无论文档滚了多远，clientY 的值都是 0。但是，2 级 DOM 没有提供把窗口坐标转换为文档坐标的标准方法。在 IE 以外的浏览器，使用 window.pageXOffset 和 window.pageYOffset 即可</li>
<li>screenX 返回事件发生时鼠标指针相对于屏幕的水平坐标。</li>
<li>screenY 返回事件发生时鼠标指针相对于屏幕的垂直坐标。</li>
<li>offsetX,offsetY 发生事件的地点在事件源元素的坐标系统中的 x 坐标和 y 坐标。</li>
<li>offsetLeft 返回当前元素的相对水平偏移位置的偏移容器。</li>
<li>offsetTop 返回当前元素的相对垂直偏移位置的偏移容器</li>
<li>offsetHeight 返回，任何一个元素的高度包括边框和填充，但不是边距</li>
<li>offsetWidth 返回元素的宽度，包括边框和填充，但不是边距</li>
<li>offsetParent 返回元素的偏移容器</li>
<li>jQuery event.pageX 返回相对于文档左边缘的鼠标位置</li>
<li>jQuery event.pageY 返回相对于文档上边缘的鼠标位</li>
</ul>
<h2 id="javaScript实现"><a href="#javaScript实现" class="headerlink" title="javaScript实现"></a>javaScript实现</h2><ul>
<li>onmousedown</li>
<li>document.onmousemove</li>
<li><p>document.onmouseup</p>
<p>  //鼠标按下<br>  var div1 = document.getElementById(“div1”);<br>  div1.onmousedown = function(ev){</p>
<pre><code>var ev = ev || event;
//获取鼠标距离元素左边和上边的距离
//方式1：火狐旧版本不支持
//var offsetX = ev.offsetX;
//var offsetY = ev.offsetY;
//方式2
var offsetX = ev.clientX - ev.offsetLeft;
var offsetY = ev.clientY - ev.offsetTop;

//鼠标按下
document.onmousemove = function(ev){
    var ev = ev || event;
    div1.style.left = ev.clientX - this.offsetX + &quot;px&quot;;
    div1.style.top = ev.clientY - this.offsetY + &quot;px&quot;;
};
//鼠标抬起，取消移动事件
document.onmouseup = function(){
    document.onmouseup = document.onmousemove = null;
}；

return false;
</code></pre><p>  };</p>
</li>
</ul>
<p><strong>javaScript实现移动端拖拽</strong></p>
<pre><code>var isdrag=false;   
var NowLeft,disX;
var NowTop,disY; 
var oDiv2 = document.getElementById(&quot;gamecar&quot;);
oDiv2.addEventListener(&apos;touchstart&apos;,thismousedown);  
oDiv2.addEventListener(&apos;touchend&apos;,thismouseup);  
oDiv2.addEventListener(&apos;touchmove&apos;,thismousemove);  
function thismousedown(e){
    isdrag = true;   
    console.log(e);
    NowLeft = oDiv2.offsetLeft;  
    NowTop = oDiv2.offsetTop;   
    disX = e.touches[0].pageX;
    disY = e.touches[0].pageY;
    return false;
}
function thismousemove(e){   
    if(isdrag){
           oDiv2.style.left = NowLeft + e.touches[0].pageX - disX + &apos;px&apos;; 
           oDiv2.style.top = NowTop + e.touches[0].pageY - disY + &apos;px&apos;;
           return false;   
    }   
}   
function thismouseup(){  
    isdrag = false;  
};
</code></pre><p><strong>jQuery实现鼠标拖拽效果</strong></p>
<pre><code>//鼠标按下
$(&quot;#gamecar&quot;).on(&quot;mousedown&quot;,function(ev){
    var ev = ev || window.event;
    var offsetX = ev.offsetX;
    var offsetY = ev.offsetY;
    //鼠标移动
    $(document).on(&quot;mousemove&quot;,function(ev){
        var ev = ev || window.event;
        var carLeft = ev.clientX - offsetX + &quot;px&quot;;
        var carTop = ev.clientY - offsetY + &quot;px&quot;;
        $(&quot;#gamecar&quot;).css({
            left: carLeft,
            top: carTop
        });
    });
    //鼠标移开
    $(document).on(&quot;mouseup&quot;,function(){
        //移除元素所有的事件处理器
        $(document).unbind();
    });
    return false;
});
</code></pre><h2 id="完整代码示范"><a href="#完整代码示范" class="headerlink" title="完整代码示范"></a>完整代码示范</h2><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset=&quot;UTF-8&quot;&gt;
&lt;title&gt;&lt;/title&gt;
&lt;style&gt;
    *{
        padding: 0;
        margin: 0;
    }
    #div1{
        width: 100px;
        height: 100px;
        background-color: red;
        position: absolute;
        left: 100px;
        top: 200px;
        border-radius: 50%;
        box-shadow: 0 0 2px 3px red;
    }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var div1 = document.getElementById(&apos;div1&apos;);

//鼠标按下
div1.onmousedown = function(ev){
    console.log(&apos;鼠标按下了&apos;);
    var ev = ev || event;

    //获取鼠标距离元素左边和上边的距离
    //方式1:火狐旧版本不兼容
    //var offsetX = ev.offsetX;
    //var offsetY = ev.offsetY;
    //方式2
    var offsetX = ev.clientX - this.offsetLeft;
    var offsetY = ev.clientY - this.offsetTop;

    document.onmousemove = function(ev){

        var ev = ev || event;
        console.log(ev.clientX,ev.clientY);

        div1.style.left = ev.clientX - offsetX + &apos;px&apos;;
        div1.style.top = ev.clientY - offsetY + &apos;px&apos;;
    };

    //鼠标抬起，取消移动事件
    document.onmouseup = function(){
        document.onmouseup = document.onmousemove = null;
    };

    return false;
};

/*
 三步：
 1.元素onmousedown
 2.document.onmousemove
 3.documnet.onmouseup
 **/
&lt;/script&gt;
&lt;/html&gt;
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[正则表达式]]></title>
      <url>http://ningbo00.top/2016/10/10/reg/</url>
      <content type="html"><![CDATA[<h1 id="正则表达式简介"><a href="#正则表达式简介" class="headerlink" title="正则表达式简介"></a>正则表达式简介</h1><h2 id="正则表达式的目的"><a href="#正则表达式的目的" class="headerlink" title="正则表达式的目的"></a>正则表达式的目的</h2><ol>
<li>给定的字符串是否符合正则表达式的过滤逻辑（匹配）</li>
<li>可以通过正则表达式，从字符串中获取我们想要的特定部分</li>
</ol>
<h2 id="正则表达式的特点"><a href="#正则表达式的特点" class="headerlink" title="正则表达式的特点"></a>正则表达式的特点</h2><ol>
<li>灵活性、逻辑性和功能性非常的强</li>
<li>可以迅速地用极简的方式达到字符串的复杂控制</li>
</ol>
<h2 id="JavaScript-RegExp对象"><a href="#JavaScript-RegExp对象" class="headerlink" title="JavaScript RegExp对象"></a>JavaScript RegExp对象</h2><p>RegExp对象用于规定在文本中检索的内容<br>当检索某个文件时，可以用RegExp这种模式来描述要检索的内容<br>复杂的模式可用于解析、格式检查、替换等等</p>
<hr>
<h3 id="JavaScript中正则表达式的声明方式"><a href="#JavaScript中正则表达式的声明方式" class="headerlink" title="JavaScript中正则表达式的声明方式"></a>JavaScript中正则表达式的声明方式</h3><p>创建RegExp对象的语法</p>
<pre><code>var reg = new RegExp(参数1，参数2)
</code></pre><ul>
<li>参数1：正则公式（匹配原则）也可以是要匹配的字符串</li>
<li>参数2：修饰符，可以省略<ul>
<li>常用修饰符：i:忽略大小写 g:全局匹配 m:执行多行匹配(结合^ $使用)</li>
</ul>
</li>
</ul>
<h3 id="直接量语法"><a href="#直接量语法" class="headerlink" title="直接量语法"></a>直接量语法</h3><pre><code>var reg3 = /参数1/修饰符；
</code></pre><ul>
<li>参数不能写成字符串</li>
<li>参数1：匹配原则</li>
<li>参数2：可选，修饰符（i g m）</li>
</ul>
<h3 id="方括号"><a href="#方括号" class="headerlink" title="方括号"></a>方括号</h3><ul>
<li>[abc]：查找方括号之间的任何字符。</li>
<li>[^abc]：查找任何不在方括号之间的字符。</li>
<li>[0-9]：查找任何从 0 至 9 的数字。</li>
<li>[a-z]：查找任何从小写 a 到小写 z 的字符。</li>
<li>[A-Z]：查找任何从大写 A 到大写 Z 的字符。</li>
<li>[A-z]：查找任何从大写 A 到小写 z 的字符。</li>
<li>[adgk]： 查找给定集合内的任何字符。</li>
<li>[^adgk]：查找给定集合外的任何字符。</li>
<li>(red|blue|green)：查找任何指定的选项。</li>
</ul>
<h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><p>元字符（Metacharacter）是拥有特殊含义的字符：</p>
<ul>
<li>.：查找单个字符，除了换行和行结束符。</li>
<li>\w：查找单词字符。</li>
<li>\W：查找非单词字符。</li>
<li>\d：查找数字。</li>
<li>\D：查找非数字字符。</li>
<li>\s：查找空白字符。</li>
<li>\S：查找非空白字符。</li>
<li>\b：匹配单词边界。</li>
<li>\B：匹配非单词边界。</li>
<li>\0：查找 NUL 字符。</li>
</ul>
<h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><ul>
<li>n+ 匹配任何包含至少一个 n 的字符串。</li>
<li>n* 匹配任何包含零个或多个 n 的字符串。</li>
<li>n? 匹配任何包含零个或一个 n 的字符串。</li>
<li>n{X} 匹配包含 X 个 n 的序列的字符串。</li>
<li>n{X,Y} 匹配包含 X 或 Y 个 n 的序列的字符串。</li>
<li>n{X,} 匹配包含至少 X 个 n 的序列的字符串。</li>
<li>n$ 匹配任何结尾为 n 的字符串。</li>
<li>^n 匹配任何开头为 n 的字符串。</li>
<li>?=n 匹配任何其后紧接指定字符串 n 的字符串。</li>
<li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串。</li>
</ul>
<h3 id="RegExp对象的方法"><a href="#RegExp对象的方法" class="headerlink" title="RegExp对象的方法"></a>RegExp对象的方法</h3><p>regExp对象有3个方法：test()、exec()、compile()<br>test()方法检索字符串中的指定值。返回时true或false<br>exec()方法检索字符串中的指定值。返回值是被找到的值。如果没有发现匹配，则返回null<br>compile()方法用于改变RegExp。既可以改变检索模式，也可以添加或删除第二个参数</p>
<h3 id="支持正则表达式的-String-对象的方法"><a href="#支持正则表达式的-String-对象的方法" class="headerlink" title="支持正则表达式的 String 对象的方法"></a>支持正则表达式的 String 对象的方法</h3><ul>
<li>search 检索与正则表达式相匹配的值。</li>
<li>match 找到一个或多个正则表达式的匹配。</li>
<li>replace 替换与正则表达式匹配的子串。</li>
<li>split 把字符串分割为字符串数组。</li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
